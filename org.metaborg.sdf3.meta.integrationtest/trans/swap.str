module swap

imports

  libstratego-lib
  signatures/-

rules

  editor-action-swap-exps-abstract-syntax              = editor-action(swap-exps-abstract-syntax)
  editor-action-swap-exps-concrete-syntax              = editor-action(swap-exps-concrete-syntax)
  editor-action-swap-exps-concrete-syntax-simple       = editor-action(swap-exps-concrete-syntax-simple)
  editor-action-swap-exps-concrete-syntax-var          = editor-action(swap-exps-concrete-syntax-var)
  editor-action-reverse-stmts-concrete-syntax-varlist  = editor-action(reverse-stmts-concrete-syntax-varlist)
  editor-action-surround-stmts-concrete-syntax-varlist = editor-action(surround-stmts-concrete-syntax-varlist)
  editor-action-surround-stmts-concrete-syntax-varlist2 = editor-action(surround-stmts-concrete-syntax-varlist2)
  editor-action-surround-stmts-concrete-syntax-list-fromterm = editor-action(surround-stmts-concrete-syntax-list-fromterm)

  editor-action(s):
    (_, _, ast, path, _) -> (path, <oncetd(s)> ast) 

  swap-exps-abstract-syntax:
    Add(e1, e2) -> Add(e2, e1)

  swap-exps-concrete-syntax:
    stmt |[ ~exp:e1 + ~exp:e2 ; ]| ->
    stmt |[ ~exp:e2 + ~exp:e1 ; ]|

  swap-exps-concrete-syntax-simple:
    |[ ~e1 + ~e2 ; ]| ->
    |[ ~e2 + ~e1 ; ]|

  swap-exps-concrete-syntax-var:
    |[ exp + exp2 ; ]| ->
    |[ exp2 + exp ; ]|

  reverse-stmts-concrete-syntax-varlist:
    |[ stmt1* ]| ->
    |[ stmt2* ]|
  where stmt2* := <reverse> stmt1*

  surround-stmts-concrete-syntax-varlist:
    |[ stmt1* ]|  ->
    program |[ a; stmt1* b; ]|
  where stmt2* := <reverse> stmt1*

  surround-stmts-concrete-syntax-varlist2:
    |[ stmt1* ]|  ->
    program |[ stmt2* a; stmt1* stmt1* b; stmt2* ]|
  where stmt2* := <reverse> stmt1*

  surround-stmts-concrete-syntax-list-fromterm:
    |[ ~*stmt1* ]|  ->
    program |[ a; ~*stmt1* b; ]|
  where stmt2* := <reverse> stmt1*
