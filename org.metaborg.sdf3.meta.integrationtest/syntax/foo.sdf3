module foo

imports

  StrategoLang/import-namespaced
  StrategoLang/sugar/terms-namespaced
  thesyntax

context-free start-symbols

  StrategoLang-Module

context-free sorts

  StmtMLV

context-free syntax

  StrategoLang-PreTerm.ToTerm = <|[ <Stmt> ]|>
  StrategoLang-PreTerm.ToTerm = <stmt |[ <Stmt> ]|>

  StrategoLang-PreTerm.ToTerm = <|[ <Start> ]|>
  StrategoLang-PreTerm.ToTerm = <program |[ <Start> ]|>

  Exp.FromTerm = [~[StrategoLang-Term]]
  Exp.FromTerm = [~exp:[StrategoLang-Term]]

// TODO: support variables section in SDF3 or document this as the way to write Stratego mix syntax

  Exp.meta-var = ExpVar

/*
  Stmt* =            // Nil
  Stmt* = Stmt+      // (injection)
  Stmt+ = Stmt       // Ins
  Stmt+ = Stmt+ Stmt // Snoc

  // Stmt+ = Stmt Stmt+ // (would be Cons)
  // Stmt+ = Stmt+ Stmt+ {right} // (old Conc rule before Snoc)
*/


  StmtMLV.meta-listvar = StmtListVar

  Stmt+ = StmtMLV
  Stmt+.Conc = Stmt+ StmtMLV

lexical sorts

  ExpVar StmtListVar

lexical syntax

  ExpVar = 'exp' [0-9]*
  StmtListVar = 'stmt' [0-9]* '*'

lexical restrictions

  ExpVar -/- [0-9]