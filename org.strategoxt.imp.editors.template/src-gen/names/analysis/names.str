module src-gen/names/analysis/names

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/relations/-
  lib/runtime/editor/-
  include/TemplateLang
  analysis/types
  libstrc


signature
  constructors
    NablNsModule      : Namespace
    NablNsSort        : Namespace
    NablNsConstructor : Namespace
    NablNsLabel       : Namespace


signature
  constructors
    NablProp_def             : Property
    NablProp_sort            : Property
    NablProp_constructorName : Property


rules

  nabl-custom-properties(add-properties) =
    ![NablProp_def(), NablProp_sort(), NablProp_constructorName()]
    ; add-properties

  def-is(|ctx__) =
    nabl-prop-calc(|ctx__, [])

  def-is(|ctx__, dep*) =
    nabl-prop-calc(|ctx__, dep*)

  def-task(|ctx__) =
    get-or-create-property-task(|ctx__, NablProp_def())

  def-list(|ctx__) =
    nabl-prop-list(|ctx__, [])

  def-list(|ctx__, dep*) =
    nabl-prop-list(|ctx__, dep*)

  def-lookup(|ctx__) =
    nabl-prop-lookup(|NablProp_def(), ctx__, [])

  def-lookup(|ctx__, dep*) =
    nabl-prop-lookup(|NablProp_def(), ctx__, dep*)

  def-match(|ctx__, expected) =
    nabl-prop-match(
    | NablProp_def()
    , ctx__
    , Eq()
    , expected
    )

  def-match(|ctx__, relation, expected) =
    nabl-prop-match(|NablProp_def(), ctx__, relation, expected)

  create-def-task(|ctx__) =
    fail

  get-def(|) =
    get-property(|NablProp_def())

  store-def(|ctx__, prop) =
    nabl-store-prop(
    | ctx__
    , Prop(NablProp_def(), prop, [])
    )

  create-property-task(|ctx__, kind):
    term -> <create-def-task(|ctx__)> term
    where NablProp_def() := kind

  sort-is(|ctx__) =
    nabl-prop-calc(|ctx__, [])

  sort-is(|ctx__, dep*) =
    nabl-prop-calc(|ctx__, dep*)

  sort-task(|ctx__) =
    get-or-create-property-task(|ctx__, NablProp_sort())

  sort-list(|ctx__) =
    nabl-prop-list(|ctx__, [])

  sort-list(|ctx__, dep*) =
    nabl-prop-list(|ctx__, dep*)

  sort-lookup(|ctx__) =
    nabl-prop-lookup(|NablProp_sort(), ctx__, [])

  sort-lookup(|ctx__, dep*) =
    nabl-prop-lookup(|NablProp_sort(), ctx__, dep*)

  sort-match(|ctx__, expected) =
    nabl-prop-match(
    | NablProp_sort()
    , ctx__
    , Eq()
    , expected
    )

  sort-match(|ctx__, relation, expected) =
    nabl-prop-match(|NablProp_sort(), ctx__, relation, expected)

  create-sort-task(|ctx__) =
    fail

  get-sort(|) =
    get-property(|NablProp_sort())

  store-sort(|ctx__, prop) =
    nabl-store-prop(
    | ctx__
    , Prop(NablProp_sort(), prop, [])
    )

  create-property-task(|ctx__, kind):
    term -> <create-sort-task(|ctx__)> term
    where NablProp_sort() := kind

  constructorName-is(|ctx__) =
    nabl-prop-calc(|ctx__, [])

  constructorName-is(|ctx__, dep*) =
    nabl-prop-calc(|ctx__, dep*)

  constructorName-task(|ctx__) =
    get-or-create-property-task(|ctx__, NablProp_constructorName())

  constructorName-list(|ctx__) =
    nabl-prop-list(|ctx__, [])

  constructorName-list(|ctx__, dep*) =
    nabl-prop-list(|ctx__, dep*)

  constructorName-lookup(|ctx__) =
    nabl-prop-lookup(|NablProp_constructorName(), ctx__, [])

  constructorName-lookup(|ctx__, dep*) =
    nabl-prop-lookup(|NablProp_constructorName(), ctx__, dep*)

  constructorName-match(|ctx__, expected) =
    nabl-prop-match(
    | NablProp_constructorName()
    , ctx__
    , Eq()
    , expected
    )

  constructorName-match(|ctx__, relation, expected) =
    nabl-prop-match(|NablProp_constructorName(), ctx__, relation, expected)

  create-constructorName-task(|ctx__) =
    fail

  get-constructorName(|) =
    get-property(|NablProp_constructorName())

  store-constructorName(|ctx__, prop) =
    nabl-store-prop(
    | ctx__
    , Prop(NablProp_constructorName(), prop, [])
    )

  create-property-task(|ctx__, kind):
    term -> <create-constructorName-task(|ctx__)> term
    where NablProp_constructorName() := kind


rules

  nabl-get-scope =
    ?Module(Unparameterized(m), i*, s*)
    ; ![NablNsSort(), NablNsConstructor()]

  nabl-get-name :
    Module(Unparameterized(m), i*, s*) -> m

  nabl-name-apply(s) =
    Module(Unparameterized(s), id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Module(Unparameterized(m), i*, s*)
    ; origin-track-forced(
        Module(
          origin-track-forced(
            Unparameterized(
              nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsModule()
              , Unique()
              , Current()
              , [NablNsSort(), NablNsConstructor()]
              , []
              )
            )
          |
          )
        , id
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    Module(Unparameterized(m)) -> m

  nabl-name-apply(s) =
    Module(Unparameterized(s))

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Module(Unparameterized(m))
    ; origin-track-forced(
        Module(
          origin-track-forced(
            Unparameterized(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsModule()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-import-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Module(Unparameterized(m))
    ; origin-track-forced(
        nabl-import(
        | lang__
        , ctx__
        , uniques__
        , uris__
        , [ <{:
               id
               ; !Wildcard(
                    [ Import(lang__, NablNsSort())
                    , Import(lang__, NablNsConstructor())
                    ]
                  , Context(
                      NablNsModule()
                    , m
                    , []
                    , Current()
                    )
                  , Current()
                  , []
                  )
             }>
          ]
        )
      |
      )

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@SdfProductionWithCons(
         SortCons(
           Lex(SortDef(s))
         , Constructor(c)
         )
       , rhs
       , attrs
       )
    ; (id
       ; origin-track-forced(
           SdfProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(
                   Lex(
                     origin-track-forced(
                       SortDef(
                         nabl-def(
                           ?c-uri1__
                         , ?s-uri1__
                         | lang__
                         , ctx__
                         , uniques__
                         , uri__
                         , uri__
                         , NablNsSort()
                         , NonUnique()
                         , Current()
                         , []
                         , []
                         )
                       )
                     |
                     )
                   )
                 |
                 )
               , origin-track-forced(Constructor(id)|)
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; (id
       ; origin-track-forced(
           SdfProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(
                   Lex(origin-track-forced(SortDef(id)|))
                 |
                 )
               , origin-track-forced(
                   Constructor(
                     nabl-def(
                       ?c-uri2__
                     , ?s-uri2__
                     | lang__
                     , ctx__
                     , uniques__
                     , c-uri1__
                     , s-uri1__
                     , NablNsConstructor()
                     , Unique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri2__)
    ; match(sibl-uris__|s-uri2__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@SdfProductionWithCons(
         SortCons(
           Lex(SortDef(s))
         , Constructor(c)
         )
       , rhs
       , attrs
       )
    ; (where(id)
       ; (id
          ; SdfProductionWithCons(
              SortCons(
                Lex(
                  SortDef(
                    nabl-store-props(
                    | ctx__
                    , [ Prop(Type(), SortType(s), [])
                      , Prop(NablProp_constructorName(), c, [])
                      ]
                    )
                  )
                )
              , Constructor(id)
              )
            , id
            , id
            ))
       ; where(ty* := <new-task-fixdeps(|ctx__, [])> Id(
                                                       <get-or-create-property-task(|ctx__, Type())> rhs
                                                     ))
       ; id
       ; SdfProductionWithCons(
           SortCons(
             Lex(SortDef(id))
           , Constructor(
               nabl-store-props(
               | ctx__
               , [ Prop(
                     Type()
                   , FunType(ty*, SortType(s))
                   , []
                   )
                 ]
               )
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-get-name :
    p@SdfProduction(Lex(SortDef(s)), rhs, attrs) -> s

  nabl-name-apply(s) =
    id
    ; SdfProduction(Lex(SortDef(s)), id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@SdfProduction(Lex(SortDef(s)), rhs, attrs)
    ; (id
       ; origin-track-forced(
           SdfProduction(
             origin-track-forced(
               Lex(
                 origin-track-forced(
                   SortDef(
                     nabl-def(
                       ?c-uri1__
                     , ?s-uri1__
                     | lang__
                     , ctx__
                     , uniques__
                     , uri__
                     , uri__
                     , NablNsSort()
                     , NonUnique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@SdfProduction(Lex(SortDef(s)), rhs, attrs)
    ; (where(id)
       ; id
       ; SdfProduction(
           Lex(
             SortDef(
               nabl-store-props(
               | ctx__
               , [ Prop(Type(), SortType(s), [])
                 ]
               )
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@SdfProductionWithCons(
         SortCons(
           Cf(SortDef(s))
         , Constructor(c)
         )
       , rhs
       , attrs
       )
    ; (id
       ; origin-track-forced(
           SdfProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(
                   Cf(
                     origin-track-forced(
                       SortDef(
                         nabl-def(
                           ?c-uri1__
                         , ?s-uri1__
                         | lang__
                         , ctx__
                         , uniques__
                         , uri__
                         , uri__
                         , NablNsSort()
                         , NonUnique()
                         , Current()
                         , []
                         , []
                         )
                       )
                     |
                     )
                   )
                 |
                 )
               , origin-track-forced(Constructor(id)|)
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; (id
       ; origin-track-forced(
           SdfProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(
                   Cf(origin-track-forced(SortDef(id)|))
                 |
                 )
               , origin-track-forced(
                   Constructor(
                     nabl-def(
                       ?c-uri2__
                     , ?s-uri2__
                     | lang__
                     , ctx__
                     , uniques__
                     , c-uri1__
                     , s-uri1__
                     , NablNsConstructor()
                     , Unique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri2__)
    ; match(sibl-uris__|s-uri2__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@SdfProductionWithCons(
         SortCons(
           Cf(SortDef(s))
         , Constructor(c)
         )
       , rhs
       , attrs
       )
    ; (where(id)
       ; (id
          ; SdfProductionWithCons(
              SortCons(
                Cf(
                  SortDef(
                    nabl-store-props(
                    | ctx__
                    , [ Prop(Type(), SortType(s), [])
                      , Prop(NablProp_constructorName(), c, [])
                      ]
                    )
                  )
                )
              , Constructor(id)
              )
            , id
            , id
            ))
       ; where(ty* := <new-task-fixdeps(|ctx__, [])> Id(
                                                       <get-or-create-property-task(|ctx__, Type())> rhs
                                                     ))
       ; id
       ; SdfProductionWithCons(
           SortCons(
             Cf(SortDef(id))
           , Constructor(
               nabl-store-props(
               | ctx__
               , [ Prop(
                     Type()
                   , FunType(ty*, SortType(s))
                   , []
                   )
                 ]
               )
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-get-name :
    p@SdfProduction(Cf(SortDef(s)), rhs, attrs) -> s

  nabl-name-apply(s) =
    id
    ; SdfProduction(Cf(SortDef(s)), id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@SdfProduction(Cf(SortDef(s)), rhs, attrs)
    ; (id
       ; origin-track-forced(
           SdfProduction(
             origin-track-forced(
               Cf(
                 origin-track-forced(
                   SortDef(
                     nabl-def(
                       ?c-uri1__
                     , ?s-uri1__
                     | lang__
                     , ctx__
                     , uniques__
                     , uri__
                     , uri__
                     , NablNsSort()
                     , NonUnique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@SdfProduction(Cf(SortDef(s)), rhs, attrs)
    ; (where(id)
       ; id
       ; SdfProduction(
           Cf(
             SortDef(
               nabl-store-props(
               | ctx__
               , [ Prop(Type(), SortType(s), [])
                 ]
               )
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@SdfProductionWithCons(
         SortCons(SortDef(s), Constructor(c))
       , rhs
       , attrs
       )
    ; (id
       ; origin-track-forced(
           SdfProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(
                   SortDef(
                     nabl-def(
                       ?c-uri1__
                     , ?s-uri1__
                     | lang__
                     , ctx__
                     , uniques__
                     , uri__
                     , uri__
                     , NablNsSort()
                     , NonUnique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               , origin-track-forced(Constructor(id)|)
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; (id
       ; origin-track-forced(
           SdfProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(SortDef(id)|)
               , origin-track-forced(
                   Constructor(
                     nabl-def(
                       ?c-uri2__
                     , ?s-uri2__
                     | lang__
                     , ctx__
                     , uniques__
                     , c-uri1__
                     , s-uri1__
                     , NablNsConstructor()
                     , Unique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri2__)
    ; match(sibl-uris__|s-uri2__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@SdfProductionWithCons(
         SortCons(SortDef(s), Constructor(c))
       , rhs
       , attrs
       )
    ; (where(id)
       ; (id
          ; SdfProductionWithCons(
              SortCons(
                SortDef(
                  nabl-store-props(
                  | ctx__
                  , [ Prop(Type(), SortType(s), [])
                    , Prop(NablProp_constructorName(), c, [])
                    ]
                  )
                )
              , Constructor(id)
              )
            , id
            , id
            ))
       ; where(ty* := <new-task-fixdeps(|ctx__, [])> Id(
                                                       <get-or-create-property-task(|ctx__, Type())> rhs
                                                     ))
       ; id
       ; SdfProductionWithCons(
           SortCons(
             SortDef(id)
           , Constructor(
               nabl-store-props(
               | ctx__
               , [ Prop(
                     Type()
                   , FunType(ty*, SortType(s))
                   , []
                   )
                 ]
               )
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-get-name :
    p@SdfProduction(SortDef(s), rhs, attrs) -> s

  nabl-name-apply(s) =
    id ; SdfProduction(SortDef(s), id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@SdfProduction(SortDef(s), rhs, attrs)
    ; (id
       ; origin-track-forced(
           SdfProduction(
             origin-track-forced(
               SortDef(
                 nabl-def(
                   ?c-uri1__
                 , ?s-uri1__
                 | lang__
                 , ctx__
                 , uniques__
                 , uri__
                 , uri__
                 , NablNsSort()
                 , NonUnique()
                 , Current()
                 , []
                 , []
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@SdfProduction(SortDef(s), rhs, attrs)
    ; (where(id)
       ; id
       ; SdfProduction(
           SortDef(
             nabl-store-props(
             | ctx__
             , [ Prop(Type(), SortType(s), [])
               ]
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@TemplateProductionWithCons(
         SortCons(SortDef(s), Constructor(c))
       , t
       , attrs
       )
    ; (id
       ; origin-track-forced(
           TemplateProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(
                   SortDef(
                     nabl-def(
                       ?c-uri1__
                     , ?s-uri1__
                     | lang__
                     , ctx__
                     , uniques__
                     , uri__
                     , uri__
                     , NablNsSort()
                     , NonUnique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               , origin-track-forced(Constructor(id)|)
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; (id
       ; origin-track-forced(
           TemplateProductionWithCons(
             origin-track-forced(
               SortCons(
                 origin-track-forced(SortDef(id)|)
               , origin-track-forced(
                   Constructor(
                     nabl-def(
                       ?c-uri2__
                     , ?s-uri2__
                     | lang__
                     , ctx__
                     , uniques__
                     , c-uri1__
                     , s-uri1__
                     , NablNsConstructor()
                     , Unique()
                     , Current()
                     , []
                     , []
                     )
                   )
                 |
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri2__)
    ; match(sibl-uris__|s-uri2__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@TemplateProductionWithCons(
         SortCons(SortDef(s), Constructor(c))
       , t
       , attrs
       )
    ; (where(id)
       ; (id
          ; TemplateProductionWithCons(
              SortCons(
                SortDef(
                  nabl-store-props(
                  | ctx__
                  , [ Prop(Type(), SortType(s), [])
                    , Prop(NablProp_constructorName(), c, [])
                    ]
                  )
                )
              , Constructor(id)
              )
            , id
            , id
            ))
       ; where(ty* := <new-task-fixdeps(|ctx__, [])> Id(
                                                       <get-or-create-property-task(|ctx__, Type())> t
                                                     ))
       ; id
       ; TemplateProductionWithCons(
           SortCons(
             SortDef(id)
           , Constructor(
               nabl-store-props(
               | ctx__
               , [ Prop(
                     Type()
                   , FunType(ty*, SortType(s))
                   , []
                   )
                 ]
               )
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-get-name :
    p@TemplateProduction(SortDef(s), t, attrs) -> s

  nabl-name-apply(s) =
    id ; TemplateProduction(SortDef(s), id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?p@TemplateProduction(SortDef(s), t, attrs)
    ; (id
       ; origin-track-forced(
           TemplateProduction(
             origin-track-forced(
               SortDef(
                 nabl-def(
                   ?c-uri1__
                 , ?s-uri1__
                 | lang__
                 , ctx__
                 , uniques__
                 , uri__
                 , uri__
                 , NablNsSort()
                 , NonUnique()
                 , Current()
                 , []
                 , []
                 )
               )
             |
             )
           , id
           , id
           )
         |
         ))
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?p@TemplateProduction(SortDef(s), t, attrs)
    ; (where(id)
       ; id
       ; TemplateProduction(
           SortDef(
             nabl-store-props(
             | ctx__
             , [ Prop(Type(), SortType(s), [])
               ]
             )
           )
         , id
         , id
         ))
    ; fail

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?SortConsRef(Sort(s), Constructor(c))
    ; origin-track-forced(
        SortConsRef(
          origin-track-forced(
            Sort(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsSort()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        , origin-track-forced(Constructor(id)|)
        )
      |
      )
    ; origin-track-forced(
        SortConsRef(
          origin-track-forced(Sort(id)|)
        , origin-track-forced(
            Constructor(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsConstructor()
                        , [Prop(NablProp_sort(), s, [])]
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?SortConsRef(
       Lex(Sort(s))
     , Constructor(c)
     )
    ; origin-track-forced(
        SortConsRef(
          origin-track-forced(
            Lex(
              origin-track-forced(
                Sort(
                  nabl-use(
                  | lang__
                  , ctx__
                  , uniques__
                  , uris__
                  , [ <{:
                         id
                         ; !UseCandidate(
                              NablNsSort()
                            , []
                            , Current()
                            , True()
                            , []
                            )
                       }>
                    ]
                  )
                )
              |
              )
            )
          |
          )
        , origin-track-forced(Constructor(id)|)
        )
      |
      )
    ; origin-track-forced(
        SortConsRef(
          origin-track-forced(
            Lex(origin-track-forced(Sort(id)|))
          |
          )
        , origin-track-forced(
            Constructor(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsConstructor()
                        , [Prop(NablProp_sort(), s, [])]
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?SortConsRef(
       Cf(Sort(s))
     , Constructor(c)
     )
    ; origin-track-forced(
        SortConsRef(
          origin-track-forced(
            Cf(
              origin-track-forced(
                Sort(
                  nabl-use(
                  | lang__
                  , ctx__
                  , uniques__
                  , uris__
                  , [ <{:
                         id
                         ; !UseCandidate(
                              NablNsSort()
                            , []
                            , Current()
                            , True()
                            , []
                            )
                       }>
                    ]
                  )
                )
              |
              )
            )
          |
          )
        , origin-track-forced(Constructor(id)|)
        )
      |
      )
    ; origin-track-forced(
        SortConsRef(
          origin-track-forced(
            Cf(origin-track-forced(Sort(id)|))
          |
          )
        , origin-track-forced(
            Constructor(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsConstructor()
                        , [Prop(NablProp_sort(), s, [])]
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-get-name :
    Sort(s) -> s

  nabl-name-apply(s) =
    Sort(s)

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Sort(s)
    ; origin-track-forced(
        Sort(
          nabl-use(
          | lang__
          , ctx__
          , uniques__
          , uris__
          , [ <{:
                 id
                 ; !UseCandidate(
                      NablNsSort()
                    , []
                    , Current()
                    , True()
                    , []
                    )
               }>
            ]
          )
        )
      |
      )