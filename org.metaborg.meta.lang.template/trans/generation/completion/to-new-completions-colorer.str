module generation/completion/to-new-completions-colorer

imports
  libstratego-lib
  libstrc
  signatures/TemplateLang-sig
  analysis/types
  runtime/nabl/-
  runtime/task/-
  runtime/types/-
  analysis/desugar
  generation/gen-utils/to-str
  lib/EditorService
  signatures/sorts/Sorts-sig
  signatures/modules/Modules-sig
  
rules
    
  module-to-cmp-colorer:
  Module(m, i*, s*) -> Module(m', i'*, [Colorer("", c*)])
  with
     m'  := <to-str-module-name(|"-cc-esv", "completion/colorer")> Module(m);
     i'* := <mapconcat(?Imports(<id>)); not(?[]); map(to-str-import(|"-cc-esv", "completion/colorer")) <+ ![]> i*;
     c*  := <filter(section-to-cmp-colorer); flatten-list> s*
    
  section-to-cmp-colorer:
    SDFSection(ContextFreeSyntax(prods*)) -> cc-colorer*
      with
      //content complete prods
      cc-colorer* := < collect(?SortDef(<strip-annos>) <+ ?Sort(<strip-annos>))
                  ; nub 
                  ; map(sort-to-colorer)> prods*
                   
  sort-to-colorer:
    n -> ColorRule(ConstructorOnly(Constructor($[[n]-Plhdr])), AttributeRef("gray"))