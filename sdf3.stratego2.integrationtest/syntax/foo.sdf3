module foo

imports

  StrategoLang/import-namespaced
  StrategoLang/core/modules-namespaced
  StrategoLang/sugar/terms-namespaced
  thesyntax

context-free start-symbols

  Module

context-free sorts
  
  Module

context-free syntax

  Module = StrategoLang-Module

  StrategoLang-PreTerm.ToTerm = <stmt |[ <Stmt> ]|>
  StrategoLang-PreTerm.ToTerm = <program |[ <Start> ]|>

  Exp.FromTerm = [~[StrategoLang-Term]]
  Exp.FromTerm = [~exp:[StrategoLang-Term]]
  
  Stmt.FromTerm = [~[StrategoLang-Term]]

context-free syntax // meta variables

  Exp.meta-var = ExpVar

  Stmt.meta-listvar = StmtListVar

lexical sorts

  ExpVar StmtListVar

lexical syntax

  ExpVar = 'exp' [0-9]*
  StmtListVar = 'stmt' [0-9]* '*'
  VAR = ExpVar {reject}

lexical restrictions

  ExpVar -/- [0-9]
  